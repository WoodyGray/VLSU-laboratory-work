package org;

public class task2 {
    public static void main(String[] args) {
        // Вариант 19
        // Заданные исходные данные
        int m = 4; // количество типов СрЗИ
        int n = 20; // количество значений переменной Y
        int minY = 19; // минимальное значение переменной Y
        int maxY = minY + n - 1; // максимальное значение переменной Y

        int[] w = {4, 5, 8, 9}; // стоимость СрЗИ каждого типа
        int[] c = {55, 75, 65, 69}; // эффект применения СрЗИ каждого типа
        int[] b = {2, 2, 2, 3}; // максимальное количество СрЗИ каждого типа

        // Создаем массив для хранения решения
        int[][][] dp = new int[m + 1][n + 1][b.length + 1];

        // Заполняем массив с использованием метода динамического программирования
        for (int i = 1; i <= m; i++) {
            for (int j = 0; j <= n; j++) {
                for (int k = 0; k <= b[i - 1]; k++) {
                    if (w[i - 1] <= j && k > 0) {
                        dp[i][j][k] = Math.max(dp[i - 1][j][k], dp[i][j - w[i - 1]][k - 1] + c[i - 1]);
                    } else {
                        dp[i][j][k] = dp[i - 1][j][k];
                    }
                }
            }
        }

        // Выводим наилучшее значение ЦФ для каждого значения Y
        for (int y = minY; y <= maxY; y++) {
            int maxK = Math.min(y, b[m - 1]);
            for (int k = 0; k <= maxK; k++) {
                if (k > 0) {
                    System.out.println("Максимальный эффект для Y = " + y + " и b" + (m) + " = " + k + ": " + dp[m][y - minY][k]);
                } else {
                    System.out.println("Максимальный эффект для Y = " + y + " и b" + (m) + " = " + k + ": 0");
                }
            }
        }
    }
}
